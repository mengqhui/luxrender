#include <string> 
namespace slg { namespace ocl { 
std::string KernelSource_bsdf_types = 
"#line 2 \"bsdf_types.cl\"\n" 
"/***************************************************************************\n" 
"* Copyright 1998-2015 by authors (see AUTHORS.txt)                        *\n" 
"*                                                                         *\n" 
"*   This file is part of LuxRender.                                       *\n" 
"*                                                                         *\n" 
"* Licensed under the Apache License, Version 2.0 (the \"License\");         *\n" 
"* you may not use this file except in compliance with the License.        *\n" 
"* You may obtain a copy of the License at                                 *\n" 
"*                                                                         *\n" 
"*     http://www.apache.org/licenses/LICENSE-2.0                          *\n" 
"*                                                                         *\n" 
"* Unless required by applicable law or agreed to in writing, software     *\n" 
"* distributed under the License is distributed on an \"AS IS\" BASIS,       *\n" 
"* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.*\n" 
"* See the License for the specific language governing permissions and     *\n" 
"* limitations under the License.                                          *\n" 
"***************************************************************************/\n" 
"typedef enum {\n" 
"NONE = 0,\n" 
"DIFFUSE = 1,\n" 
"GLOSSY = 2,\n" 
"SPECULAR = 4,\n" 
"REFLECT = 8,\n" 
"TRANSMIT = 16,\n" 
"ALL_TYPES = DIFFUSE | GLOSSY | SPECULAR,\n" 
"ALL_REFLECT = REFLECT | ALL_TYPES,\n" 
"ALL_TRANSMIT = TRANSMIT | ALL_TYPES,\n" 
"ALL = ALL_REFLECT | ALL_TRANSMIT\n" 
"} BSDFEventType;\n" 
"typedef int BSDFEvent;\n" 
"// This is defined only under OpenCL because of variable size structures\n" 
"#if defined(SLG_OPENCL_KERNEL)\n" 
"typedef struct {\n" 
"HitPoint hitPoint;\n" 
"unsigned int materialIndex, sceneObjectIndex;\n" 
"#if (PARAM_TRIANGLE_LIGHT_COUNT > 0)\n" 
"unsigned int triangleLightSourceIndex;\n" 
"#endif\n" 
"Frame frame;\n" 
"#if defined(PARAM_HAS_VOLUMES)\n" 
"int isVolume;\n" 
"#endif\n" 
"} BSDF;\n" 
"#endif\n" 
; } } 
